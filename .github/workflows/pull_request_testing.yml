name: Check pull request

on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_style:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install black
        run: pip install --upgrade black
      - name: Check black code style
        run: black --check ./*.py ./tests ./agents ./utils

  unit_tests:
    runs-on: ${{ matrix.os }}
    needs: check_style
    name: Unit tests
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install wheel
        run: pip install --upgrade wheel
      - name: Install requirements
        run: pip install -r ./requirements.txt -r ./requirements-dev.txt
      - name: Run tests
        run: coverage run -m pytest -x ./tests/unit_tests
      - name: Generate report
        run: |
          coverage xml
          coverage report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          env_vars: ${{ matrix.os }},${{ matrix.python-version }}

  integration_tests:
    runs-on: ${{ matrix.os }}
    needs: unit_tests
    name: Integration tests
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Setup python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install wheel
        run: pip install --upgrade wheel
      - name: Install requirements
        run: pip install -r ./requirements.txt -r ./requirements-dev.txt
      - name: Run server in background
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then brew install gnu-sed; export PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"; fi
          printf " &" >> ./run_server.sh
          chmod +x ./run_server.sh
          ./run_server.sh
        shell: bash
      - name: Wait for server
        run: PYTHONPATH=./ python .github/scripts/check_server.py
        shell: bash
      - name: Run tests
        run: python -m pytest -x ./tests/integration_tests

  code-scanning:
    name: CodeQL scan
    needs: integration_tests
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2