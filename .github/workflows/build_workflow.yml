name: Build

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:

env:
  PYTHON_BUILD_VERSION: '3.11'

jobs:
  platform_independent_tests:
    name: Platform independent tests
    uses: './.github/workflows/platform_independent_tests.yml'
  platform_dependent_tests:
    name: Platform dependent tests
    needs: platform_independent_tests
    uses: './.github/workflows/platform_dependent_tests.yml'
    with:
      testing: false
  integration_tests:
    name: Integration tests
    needs: platform_dependent_tests
    uses: './.github/workflows/integration_tests.yml'
  cross_platform_build:
    name: Build executables for all major OS
    needs: integration_tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            activate_venv: './venv/Scripts/activate'
            dist_file: 'alphaPoke_win.exe'
            release_file: 'alphaPoke_win.exe'
            data_folder: './venv/Lib/site-packages/poke_env/data;./poke_env/data'
            icon: './resources/icon.gif;./resources'
            models_folder: './models;./models'
          - os: ubuntu-latest
            activate_venv: 'source venv/bin/activate'
            dist_file: 'alphaPoke_linux'
            release_file: 'alphaPoke_linux'
            data_folder: './venv/lib/python3.10/site-packages/poke_env/data:./poke_env/data'
            icon: './resources/icon.gif:./resources'
            models_folder: './models:./models'
          - os: macos-latest
            activate_venv: 'source venv/bin/activate'
            dist_file: 'alphaPoke_macOS.zip'
            release_file: 'alphaPoke_macOS'
            data_folder: './venv/lib/python3.10/site-packages/poke_env/data:./poke_env/data'
            icon: './resources/icon.gif:./resources'
            models_folder: './models:./models'
      max-parallel: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python ${{ env.PYTHON_BUILD_VERSION }}
        uses: actions/setup-python@v5
        with:
            python-version: ${{ env.PYTHON_BUILD_VERSION }}
            cache: 'pip'
      - name: Create virtual environment
        run: python -m venv venv
      - name: Update pip and install wheel
        run: |
          ${{ matrix.activate_venv }}
          python -m pip install --upgrade pip
          pip install --upgrade wheel
      - name: Install requirements
        run: |
          ${{ matrix.activate_venv }}
          pip install -r ./requirements.txt --upgrade
      - name: Install Pyinstaller
        run: |
          ${{ matrix.activate_venv }}
          pip install --upgrade pyinstaller
      - name: Create executable
        run: |
          ${{ matrix.activate_venv }}
          pyinstaller ./play_gui.py --onefile --noconsole --icon=./resources/icon.ico --add-data "${{ matrix.data_folder }}" --add-data "${{ matrix.icon }}" --add-data "${{ matrix.models_folder }}" --name ${{ matrix.release_file }}
      - name: Zip app folder for macOS
        if: runner.os == 'macOS'
        run: |
          cd dist
          zip -r "${{ matrix.dist_file }}" "${{ matrix.release_file }}.app"
      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          path: dist/${{ matrix.dist_file }}
          name: temp_upload
          retention-days: 1
  build_latex:
    runs-on: ubuntu-latest
    name: Build latex report
    needs: cross_platform_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build latex
        uses: xu-cheng/latex-action@v3
        with:
          root_file: paper/src/main.tex
          work_in_root_file_dir: true
      - name: Rename PDF
        run: mv paper/src/main.pdf paper/src/Report.pdf
      - name: Upload PDF
        uses: actions/upload-artifact@v3
        with:
          name: temp_upload
          path: paper/src/Report.pdf
          retention-days: 1
  create_release:
    name: Create release and upload executables
    runs-on: ubuntu-latest
    needs: build_latex
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: temp_upload
          path: to_upload
      - name: Delete artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: geekyeggo/delete-artifact@v4
        with:
          name: temp_upload
          failOnError: true
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: to_upload/*
          body_path: RELEASE.md
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}