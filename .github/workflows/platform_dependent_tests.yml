name: Platform dependent tests
on:
  workflow_call:
    inputs:
      testing:
        required: true
        type: boolean
jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install wheel
        run: pip install --upgrade wheel
      - name: Install requirements
        run: pip install -r ./requirements.txt --upgrade
      - name: Install development requirements
        run: pip install -r ./requirements-dev.txt --upgrade
      - name: Ignore modelling code in Codecov
        run: for file in ./agents/*.py ; do printf '\n\t%s' "$file" >> .coveragerc ; done
      - name: Get last showdown commit hash
        id: showdown_hash
        run: |
          output=$(git ls-remote https://github.com/smogon/pokemon-showdown.git HEAD | sed 2p | cut -f1)
          echo "::set-output name=commit_hash::$output"
      - name: Restore showdown
        id: server-cache
        uses: actions/cache@v2
        with:
          path: ./pokemon-showdown
          key: server-${{ matrix.os }}-${{ matrix.python-version }}-${{ steps.showdown_hash.outputs.commit_hash }}
          restore-keys: server-${{ matrix.os }}-${{ matrix.python-version }}
      - name: Clone showdown
        if: steps.server-cache.outputs.cache-hit != 'true'
        run: cd pokemon-showdown; if (( "$?" != 0 )); then git clone https://github.com/smogon/pokemon-showdown.git; fi
      - name: Update showdown
        run: |
          cd pokemon-showdown
          git pull
      - name: Install showdown dependencies
        run: |
          cd pokemon-showdown
          npm install
          cp config/config-example.js config/config.js
          printf "\nexports.repl = false;" >> config/config.js
          printf "0" > logs/lastbattle.txt
      - name: Run server in the background
        run: |
          cd pokemon-showdown
          node pokemon-showdown start --no-security &
      - name: Wait for server
        run: until $(curl --output /dev/null --silent --head --fail http://localhost:8000); do sleep .01; done
      - name: Run tests
        run: coverage run -m pytest -x ./tests
      - name: Generate report
        if: inputs.testing
        run: |
          coverage xml
          coverage report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: inputs.testing
        with:
          env_vars: ${{ matrix.os }},${{ matrix.python-version }}